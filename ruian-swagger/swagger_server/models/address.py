# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.coordinates import Coordinates  # noqa: F401,E501
from swagger_server import util


class Address(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, street: str = None, house_number: int = None, record_number: int = None,
                 orientation_number: int = None, orientation_number_character: str = None, zip_code: int = None,
                 locality: str = None, locality_part: str = None, district_number: int = None, district: str = None,
                 ruian_id: int = None, coordinates: Coordinates = None):  # noqa: E501
        """Address - a model defined in Swagger

        :param street: The street of this Address.  # noqa: E501
        :type street: str
        :param house_number: The house_number of this Address.  # noqa: E501
        :type house_number: int
        :param record_number: The record_number of this Address.  # noqa: E501
        :type record_number: int
        :param orientation_number: The orientation_number of this Address.  # noqa: E501
        :type orientation_number: int
        :param orientation_number_character: The orientation_number_character of this Address.  # noqa: E501
        :type orientation_number_character: str
        :param zip_code: The zip_code of this Address.  # noqa: E501
        :type zip_code: int
        :param locality: The locality of this Address.  # noqa: E501
        :type locality: str
        :param locality_part: The locality_part of this Address.  # noqa: E501
        :type locality_part: str
        :param district_number: The district_number of this Address.  # noqa: E501
        :type district_number: int
        :param district: The district of this Address.  # noqa: E501
        :type district: str
        :param ruian_id: The ruian_id of this Address.  # noqa: E501
        :type ruian_id: int
        :param coordinates: The coordinates of this Address.  # noqa: E501
        :type coordinates: Coordinates
        """
        self.swagger_types = {
            'street': str,
            'house_number': int,
            'record_number': int,
            'orientation_number': int,
            'orientation_number_character': str,
            'zip_code': int,
            'locality': str,
            'locality_part': str,
            'district_number': int,
            'district': str,
            'ruian_id': int,
            'coordinates': Coordinates
        }

        self.attribute_map = {
            'street': 'street',
            'house_number': 'house_number',
            'record_number': 'record_number',
            'orientation_number': 'orientation_number',
            'orientation_number_character': 'orientation_number_character',
            'zip_code': 'zip_code',
            'locality': 'locality',
            'locality_part': 'locality_part',
            'district_number': 'district_number',
            'district': 'district',
            'ruian_id': 'ruian_id',
            'coordinates': 'coordinates'
        }
        self._street = street
        self._house_number = house_number
        self._record_number = record_number
        self._orientation_number = orientation_number
        self._orientation_number_character = orientation_number_character
        self._zip_code = zip_code
        self._locality = locality
        self._locality_part = locality_part
        self._district_number = district_number
        self._district = district
        self._ruian_id = ruian_id
        self._coordinates = coordinates

    @classmethod
    def from_dict(cls, dikt) -> 'Address':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Address of this Address.  # noqa: E501
        :rtype: Address
        """
        return util.deserialize_model(dikt, cls)

    @property
    def street(self) -> str:
        """Gets the street of this Address.


        :return: The street of this Address.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street: str):
        """Sets the street of this Address.


        :param street: The street of this Address.
        :type street: str
        """

        self._street = street

    @property
    def house_number(self) -> int:
        """Gets the house_number of this Address.


        :return: The house_number of this Address.
        :rtype: int
        """
        return self._house_number

    @house_number.setter
    def house_number(self, house_number: int):
        """Sets the house_number of this Address.


        :param house_number: The house_number of this Address.
        :type house_number: int
        """

        self._house_number = house_number

    @property
    def record_number(self) -> int:
        """Gets the record_number of this Address.


        :return: The record_number of this Address.
        :rtype: int
        """
        return self._record_number

    @record_number.setter
    def record_number(self, record_number: int):
        """Sets the record_number of this Address.


        :param record_number: The record_number of this Address.
        :type record_number: int
        """

        self._record_number = record_number

    @property
    def orientation_number(self) -> int:
        """Gets the orientation_number of this Address.


        :return: The orientation_number of this Address.
        :rtype: int
        """
        return self._orientation_number

    @orientation_number.setter
    def orientation_number(self, orientation_number: int):
        """Sets the orientation_number of this Address.


        :param orientation_number: The orientation_number of this Address.
        :type orientation_number: int
        """

        self._orientation_number = orientation_number

    @property
    def orientation_number_character(self) -> str:
        """Gets the orientation_number_character of this Address.


        :return: The orientation_number_character of this Address.
        :rtype: str
        """
        return self._orientation_number_character

    @orientation_number_character.setter
    def orientation_number_character(self, orientation_number_character: str):
        """Sets the orientation_number_character of this Address.


        :param orientation_number_character: The orientation_number_character of this Address.
        :type orientation_number_character: str
        """

        self._orientation_number_character = orientation_number_character

    @property
    def zip_code(self) -> int:
        """Gets the zip_code of this Address.


        :return: The zip_code of this Address.
        :rtype: int
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code: int):
        """Sets the zip_code of this Address.


        :param zip_code: The zip_code of this Address.
        :type zip_code: int
        """

        self._zip_code = zip_code

    @property
    def locality(self) -> str:
        """Gets the locality of this Address.


        :return: The locality of this Address.
        :rtype: str
        """
        return self._locality

    @locality.setter
    def locality(self, locality: str):
        """Sets the locality of this Address.


        :param locality: The locality of this Address.
        :type locality: str
        """

        self._locality = locality

    @property
    def locality_part(self) -> str:
        """Gets the locality_part of this Address.


        :return: The locality_part of this Address.
        :rtype: str
        """
        return self._locality_part

    @locality_part.setter
    def locality_part(self, locality_part: str):
        """Sets the locality_part of this Address.


        :param locality_part: The locality_part of this Address.
        :type locality_part: str
        """

        self._locality_part = locality_part

    @property
    def district_number(self) -> int:
        """Gets the district_number of this Address.


        :return: The district_number of this Address.
        :rtype: int
        """
        return self._district_number

    @district_number.setter
    def district_number(self, district_number: int):
        """Sets the district_number of this Address.


        :param district_number: The district_number of this Address.
        :type district_number: int
        """

        self._district_number = district_number

    @property
    def district(self) -> str:
        """Gets the district of this Address.


        :return: The district of this Address.
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district: str):
        """Sets the district of this Address.


        :param district: The district of this Address.
        :type district: str
        """

        self._district = district

    @property
    def ruian_id(self) -> int:
        """Gets the ruian_id of this Address.


        :return: The ruian_id of this Address.
        :rtype: int
        """
        return self._ruian_id

    @ruian_id.setter
    def ruian_id(self, ruian_id: int):
        """Sets the ruian_id of this Address.


        :param ruian_id: The ruian_id of this Address.
        :type ruian_id: int
        """

        self._ruian_id = ruian_id

    @property
    def coordinates(self) -> Coordinates:
        """Gets the coordinates of this Address.


        :return: The coordinates of this Address.
        :rtype: Coordinates
        """
        return self._coordinates

    @coordinates.setter
    def coordinates(self, coordinates: Coordinates):
        """Sets the coordinates of this Address.


        :param coordinates: The coordinates of this Address.
        :type coordinates: Coordinates
        """

        self._coordinates = coordinates
